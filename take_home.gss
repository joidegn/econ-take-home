cls;
library maxlik, pgraph;
rndseed 1;
data = loadd("th1.dat");

Y = data[., 1];
X = ones(rows(data), 1) ~ data[., 2:cols(data)];

// b) descriptive statistics:
wage = exp(X[., 7]);
n = rows(X);
n_ui = sumc(X[., 2]); // people receiving unemployment benefit

{vnam, mean, var, std, min, max, valid, mis} = dstat("th1.dat", 0);

//  to remove interaction terms for testing uncomment the following lines and change X[., 7] and parnames wherever necessary:
//X_cols_no_intercept = {1, 2, 3, 5, 7};
//X = X[., X_cols_no_intercept];


 // c)
@	// for testing purposes:
proc lik(data, beta);
	local Y, X;
	Y = data[., 1];
	X = data[., 2:cols(data)];
	retp(exp(X*beta)*exp(-exp(X*beta).*Y));
endp;
@
proc loglik(beta, data);
	local Y, X;
	Y = data[., 1];
	X = data[., 2:cols(data)];
	retp(X*beta - exp(X*beta).*Y);
endp;

// d)
// compute the variance-covariance matrix using the sandwich estimator.
_max_covpar = 3;
// set parameter names
parnames = getname("th1.dat");
// the first variable is the intercept and not UNDUR:
parnames[1] = "INTER";
// remove this if 
//parnames =  parnames[X_cols_no_intercept];

// parnames = {"INTER", "UI", "RR", "RRUI", "DR", "DRUI", "LWAGE"}
_max_parnames = parnames;

beta_initial = zeros(7,1);

// prevent maxlik output. To debug, comment the following line out:
screen off ;
{beta_hat, ln_likelihood, gradient, var_hat, retcode} = maxlik(Y~X, 0, &loglik, beta_initial);
screen on;

// report and print prettily
{beta_hat, ln_likelihood, gradient, var_hat, retcode} = maxprt(beta_hat, ln_likelihood, gradient, var_hat, retcode);

// e)
proc wald_statistic(Xi, beta_hat, var_hat, z);
	local h;
	h = exp(-Xi'*beta_hat) - z;
	retp(h^2*inv(Xi'*exp(-2*Xi'*beta_hat)*var_hat*Xi));
endp;

x_test = {1, 1, 0.5, 0.5, 0.1, 0.1, 5.5};

critical_value = cdfChii(0.95, 1);
wald_stat = wald_statistic(x_test, beta_hat, var_hat, 6);
print "wald statistic for supposed xi:" wald_stat;
print "critical value from chisq-distribution with 1 df:" critical_value;
if (wald_stat > critical_value);
	print "H0 was rejected at the 5% significance level. The expected unemployment duration is not 6 periods at the 5% significance level for the individual in question.";
else;
	print "H0 was not rejected at the 5% significance level";
endif;

// g)
// function for calculating the PE of LWAGE
proc PE_hat(X, beta_hat);
	retp(-beta_hat[7] * exp(-X*beta_hat));
endp;

pe_res = PE_hat(X, beta_hat);
{b, m, freq} = hist(pe_res, sqrt(rows(data)));

// X1 refers to the partial effect
{vnam, mean, var, std, min, max, valid, mis}  = dstat(0, pe_res);